name: Trivy & Security Alerts with Issue Creation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Runs daily

permissions:
  security-events: write  # Upload SARIF reports
  contents: read          # Read repo contents
  issues: write           # Create GitHub issues

jobs:
  security-scan:
    name: Run Security Scans & Create Issues
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ðŸ”¹ Run Trivy for Code, Dependencies, and Secrets
      - name: Run Trivy Security Scanner
        uses: aquasecurity/trivy-action@0.11.0
        with:
          scan-type: 'fs'  
          scan-ref: '.'     
          format: 'sarif'   
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          scanners: 'vuln,secret,misconfig,license,config,code'  # ðŸ”¹ Includes code scanning!

      - name: Upload Trivy Scan Results to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # ðŸ”¹ Fetch Dependabot Alerts & Create Issues
      - name: Fetch Dependabot Alerts & Create Issues
        run: |
          DEPENDABOT_ALERTS=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
            "https://api.github.com/repos/${{ github.repository }}/dependabot/alerts")

          echo "Fetched Dependabot Alerts:"
          echo "$DEPENDABOT_ALERTS" | jq .

          echo "$DEPENDABOT_ALERTS" | jq -c '.[]' | while IFS= read -r alert; do
            PACKAGE_NAME=$(echo "$alert" | jq -r '.dependency.package.name')
            SEVERITY=$(echo "$alert" | jq -r '.security_vulnerability.severity')
            ALERT_URL=$(echo "$alert" | jq -r '.html_url')

            if [[ -n "$PACKAGE_NAME" && -n "$SEVERITY" && -n "$ALERT_URL" ]]; then
              echo "Creating GitHub Issue for $PACKAGE_NAME..."
              curl -X POST -H "Authorization: token ${{ secrets.GH_PAT }}" \
                -H "Accept: application/vnd.github.v3+json" \
                -d "{\"title\":\"[Dependabot] Security Issue: $PACKAGE_NAME ($SEVERITY)\", \"body\":\"[View Alert]($ALERT_URL)\", \"labels\":[\"security\", \"dependabot\"]}" \
                "https://api.github.com/repos/${{ github.repository }}/issues"
            fi
          done

      # ðŸ”¹ Fetch Code Scanning Alerts & Create Issues
      - name: Fetch Code Scanning Alerts & Create Issues
        run: |
          CODE_SCANNING_ALERTS=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
            "https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts")

          echo "Fetched Code Scanning Alerts:"
          echo "$CODE_SCANNING_ALERTS" | jq .

          echo "$CODE_SCANNING_ALERTS" | jq -c '.[]' | while IFS= read -r alert; do
            RULE_NAME=$(echo "$alert" | jq -r '.rule.name')
            ALERT_URL=$(echo "$alert" | jq -r '.html_url')

            if [[ -n "$RULE_NAME" && -n "$ALERT_URL" ]]; then
              echo "Creating GitHub Issue for $RULE_NAME..."
              curl -X POST -H "Authorization: token ${{ secrets.GH_PAT }}" \
                -H "Accept: application/vnd.github.v3+json" \
                -d "{\"title\":\"[Code Scanning] $RULE_NAME\", \"body\":\"[View Alert]($ALERT_URL)\", \"labels\":[\"security\", \"code-scanning\"]}" \
                "https://api.github.com/repos/${{ github.repository }}/issues"
            fi
          done

      # ðŸ”¹ Fetch Secret Scanning Alerts & Create Issues
      - name: Fetch Secret Scanning Alerts & Create Issues
        run: |
          SECRET_SCANNING_ALERTS=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
            "https://api.github.com/repos/${{ github.repository }}/secret-scanning/alerts")

          echo "Fetched Secret Scanning Alerts:"
          echo "$SECRET_SCANNING_ALERTS" | jq .

          echo "$SECRET_SCANNING_ALERTS" | jq -c '.[]' | while IFS= read -r alert; do
            SECRET_TYPE=$(echo "$alert" | jq -r '.secret_type')
            ALERT_URL=$(echo "$alert" | jq -r '.html_url')

            if [[ -n "$SECRET_TYPE" && -n "$ALERT_URL" ]]; then
              echo "Creating GitHub Issue for $SECRET_TYPE..."
              curl -X POST -H "Authorization: token ${{ secrets.GH_PAT }}" \
                -H "Accept: application/vnd.github.v3+json" \
                -d "{\"title\":\"[Secret Scanning] $SECRET_TYPE Detected\", \"body\":\"[View Alert]($ALERT_URL)\", \"labels\":[\"security\", \"secret-scanning\"]}" \
                "https://api.github.com/repos/${{ github.repository }}/issues"
            fi
          done
